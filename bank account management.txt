#include <stdio.h>
#include <stdlib.h>
#include <string.h>

// Define transaction node
typedef struct Transaction {
    char type[10];
    int amount;
    struct Transaction* next;
} Transaction;

// Define account node
typedef struct Account {
    int accNo;
    char name[100];
    int balance;
    Transaction* history;
    struct Account* next;
} Account;

Account* head = NULL;

// Create new transaction
Transaction* createTransaction(const char* type, int amount) {
    Transaction* t = (Transaction*)malloc(sizeof(Transaction));
    if (t != NULL) {
        strcpy(t->type, type);
        t->amount = amount;
        t->next = NULL;
    }
    return t;
}

// Add transaction to an account
void addTransaction(Account* acc, const char* type, int amount) {
    Transaction* t = createTransaction(type, amount);
    t->next = acc->history;
    acc->history = t;
}

// Create new account
void createAccount(int accNo, const char* name, int initialDeposit) {
    Account* newAcc = (Account*)malloc(sizeof(Account));
    if (newAcc != NULL) {
        newAcc->accNo = accNo;
        strcpy(newAcc->name, name);
        newAcc->balance = initialDeposit;
        newAcc->history = NULL;
        newAcc->next = NULL;
        addTransaction(newAcc, "Deposit", initialDeposit);

        if (head == NULL) {
            head = newAcc;
        } else {
            Account* temp = head;
            while (temp->next != NULL) temp = temp->next;
            temp->next = newAcc;
        }
        printf("Account created for %s with Account No: %d\n", name, accNo);
    }
}

// Find account by account number
Account* findAccount(int accNo) {
    Account* temp = head;
    while (temp != NULL) {
        if (temp->accNo == accNo) return temp;
        temp = temp->next;
    }
    return NULL;
}

// Deposit amount
void deposit(int accNo, int amount) {
    Account* acc = findAccount(accNo);
    if (acc != NULL) {
        acc->balance += amount;
        addTransaction(acc, "Deposit", amount);
        printf("Deposited ₹%d to Account No: %d\n", amount, accNo);
    } else {
        printf("Account not found.\n");
    }
}

// Withdraw amount
void withdraw(int accNo, int amount) {
    Account* acc = findAccount(accNo);
    if (acc != NULL) {
        if (acc->balance >= amount) {
            acc->balance -= amount;
            addTransaction(acc, "Withdraw", amount);
            printf("Withdrew ₹%d from Account No: %d\n", amount, accNo);
        } else {
            printf("Insufficient balance.\n");
        }
    } else {
        printf("Account not found.\n");
    }
}

// Display account balance
void checkBalance(int accNo) {
    Account* acc = findAccount(accNo);
    if (acc != NULL) {
        printf("Account No: %d | Name: %s | Balance: ₹%d\n", acc->accNo, acc->name, acc->balance);
    } else {
        printf("Account not found.\n");
    }
}

// Show transaction history
void showHistory(int accNo) {
    Account* acc = findAccount(accNo);
    if (acc != NULL) {
        printf("\nTransaction History for %s (Acc No: %d):\n", acc->name, acc->accNo);
        Transaction* t = acc->history;
        while (t != NULL) {
            printf("%s: ₹%d\n", t->type, t->amount);
            t = t->next;
        }
    } else {
        printf("Account not found.\n");
    }
}

// Main menu
int main() {
    int choice, accNo, amount;
    char name[100];

    while (1) {
        printf("\n--- Bank Account Management System ---\n");
        printf("1. Create Account\n");
        printf("2. Deposit\n");
        printf("3. Withdraw\n");
        printf("4. Check Balance\n");
        printf("5. Show Transaction History\n");
        printf("6. Exit\n");
        printf("Enter choice: ");
        scanf("%d", &choice);
        getchar();  // consume newline

        switch (choice) {
            case 1:
                printf("Enter Account No: ");
                scanf("%d", &accNo);
                getchar();
                printf("Enter Name: ");
                fgets(name, 100, stdin);
                name[strcspn(name, "\n")] = 0;
                printf("Enter Initial Deposit: ");
                scanf("%d", &amount);
                createAccount(accNo, name, amount);
                break;

            case 2:
                printf("Enter Account No: ");
                scanf("%d", &accNo);
                printf("Enter Amount to Deposit: ");
                scanf("%d", &amount);
                deposit(accNo, amount);
                break;

            case 3:
                printf("Enter Account No: ");
                scanf("%d", &accNo);
                printf("Enter Amount to Withdraw: ");
                scanf("%d", &amount);
                withdraw(accNo, amount);
                break;

            case 4:
                printf("Enter Account No: ");
                scanf("%d", &accNo);
                checkBalance(accNo);
                break;

            case 5:
                printf("Enter Account No: ");
                scanf("%d", &accNo);
                showHistory(accNo);
                break;

            case 6:
                printf("Exiting program.\n");
                return 0;

            default:
                printf("Invalid choice. Try again.\n");
        }
    }
    return 0;
}
